{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,Q,C,S,C,C,C,C,C,C,C,ECAA,IAAA,EAAA,EAAA,iBAWA,IAAM,EAAY,SAAS,cAAc,CAAC,eACpC,EAAY,SAAS,cAAc,CAAC,eACpC,EAAa,SAAS,cAAc,CAAC,cACrC,EAAc,SAAS,cAAc,CAAC,iBACtC,EAAa,SAAS,cAAc,CAAC,SACrC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAiB,SAAS,cAAc,CAAC,cAS/C,eAAe,IACb,IAAM,EAAQ,EAAW,KAAK,CACxB,EAAW,EAAc,KAAK,CAEpC,GAAI,GAAS,EAAU,CACrB,IAAM,EAAO,MAAM,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,EAAO,GAC7B,IACF,SAAS,cAAc,CAAC,cAAc,KAAK,CAAC,OAAO,CAAG,OACtD,SAAS,cAAc,CAAC,iBAAiB,KAAK,CAAC,OAAO,CAAG,QACzD,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAK,GAAG,EAEvB,CACF,CAGA,eAAe,IACb,IAAM,EAAQ,EAAW,KAAK,CACxB,EAAW,EAAc,KAAK,CAEpC,GAAI,GAAS,EAAU,CACrB,IAAM,EAAO,MAAM,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,EAAO,GAC7B,IACF,SAAS,cAAc,CAAC,cAAc,KAAK,CAAC,OAAO,CAAG,OACtD,SAAS,cAAc,CAAC,iBAAiB,KAAK,CAAC,OAAO,CAAG,QACzD,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAK,GAAG,EAEvB,CACF,CAGA,eAAe,IACb,MAAM,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,IACN,SAAS,cAAc,CAAC,cAAc,KAAK,CAAC,OAAO,CAAG,QACtD,SAAS,cAAc,CAAC,iBAAiB,KAAK,CAAC,OAAO,CAAG,MAC3D,CAGA,eAAe,IACb,IAAM,EAAY,EAAe,KAAK,CAAC,IAAI,GAG3C,AAAA,CAAA,EAAA,EAAA,gBAAgB,AAAhB,EAAiB,MAAO,IACtB,GAAI,GAAQ,EACV,GAAI,CACF,MAAM,AAAA,CAAA,EAAA,EAAA,kBAAiB,AAAjB,EAAmB,EAAW,EAAK,GAAG,EAC5C,EAAe,KAAK,CAAG,GACvB,QAAQ,GAAG,CAAC,6BAGZ,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAK,GAAG,CACrB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,sBAAuB,GACrC,MAAM,yDACR,MAEA,MAAM,wDAEV,EACF,CAhEA,EAAU,gBAAgB,CAAC,QAAS,GACpC,EAAU,gBAAgB,CAAC,QAAS,GACpC,EAAW,gBAAgB,CAAC,QAAS,GACrC,EAAY,gBAAgB,CAAC,QAAS,GAgEtC,AAAA,CAAA,EAAA,EAAA,gBAAgB,AAAhB,EAAiB,AAAC,IACZ,GACF,SAAS,cAAc,CAAC,cAAc,KAAK,CAAC,OAAO,CAAG,OACtD,SAAS,cAAc,CAAC,iBAAiB,KAAK,CAAC,OAAO,CAAG,QACzD,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAK,GAAG,IAEnB,SAAS,cAAc,CAAC,cAAc,KAAK,CAAC,OAAO,CAAG,QACtD,SAAS,cAAc,CAAC,iBAAiB,KAAK,CAAC,OAAO,CAAG,OAE7D,GACA,OAAO,uBAAuB,CAAG,EAAA,uBAAuB,A,E,C,gB,O,E,E,C,Q,C,Q","sources":["<anon>","script.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"6mua5\":[function(require,module,exports,__globalThis) {\nvar _firebaseJs = require(\"./firebase.js\");\n// DOM elements\nconst signInBtn = document.getElementById(\"sign-in-btn\");\nconst signUpBtn = document.getElementById(\"sign-up-btn\");\nconst signOutBtn = document.getElementById(\"logout-btn\");\nconst addHabitBtn = document.getElementById(\"add-habit-btn\");\nconst emailInput = document.getElementById(\"email\");\nconst passwordInput = document.getElementById(\"password\");\nconst habitNameInput = document.getElementById(\"habit-name\");\n// Event Listeners\nsignInBtn.addEventListener(\"click\", signInHandler);\nsignUpBtn.addEventListener(\"click\", signUpHandler);\nsignOutBtn.addEventListener(\"click\", signOutHandler);\naddHabitBtn.addEventListener(\"click\", addHabitHandler);\n// Sign in handler\nasync function signInHandler() {\n    const email = emailInput.value;\n    const password = passwordInput.value;\n    if (email && password) {\n        const user = await (0, _firebaseJs.signIn)(email, password);\n        if (user) {\n            document.getElementById(\"login-form\").style.display = \"none\";\n            document.getElementById(\"habit-section\").style.display = \"block\";\n            (0, _firebaseJs.loadHabits)(user.uid); // Pass user.uid to loadHabits\n        }\n    }\n}\n// Sign up handler\nasync function signUpHandler() {\n    const email = emailInput.value;\n    const password = passwordInput.value;\n    if (email && password) {\n        const user = await (0, _firebaseJs.signUp)(email, password);\n        if (user) {\n            document.getElementById(\"login-form\").style.display = \"none\";\n            document.getElementById(\"habit-section\").style.display = \"block\";\n            (0, _firebaseJs.loadHabits)(user.uid); // Pass user.uid to loadHabits\n        }\n    }\n}\n// Sign out handler\nasync function signOutHandler() {\n    await (0, _firebaseJs.signOutUser)();\n    document.getElementById(\"login-form\").style.display = \"block\";\n    document.getElementById(\"habit-section\").style.display = \"none\";\n}\n// Add habit handler\nasync function addHabitHandler() {\n    const habitName = habitNameInput.value.trim();\n    // Ensure that the user is logged in before proceeding\n    (0, _firebaseJs.checkLoginStatus)(async (user)=>{\n        if (user && habitName) try {\n            await (0, _firebaseJs.addHabitToFirebase)(habitName, user.uid); // Pass user.uid here\n            habitNameInput.value = \"\"; // Clear input field\n            console.log(\"Habit added successfully!\");\n            // Refresh the habit list immediately\n            (0, _firebaseJs.loadHabits)(user.uid); // Make sure to pass user.uid to loadHabits\n        } catch (error) {\n            console.error(\"Error adding habit:\", error);\n            alert(\"There was an issue adding the habit. Please try again.\");\n        }\n        else alert(\"Please enter a habit name or ensure you're logged in.\");\n    });\n}\n// Check if the user is logged in when the page loads\n(0, _firebaseJs.checkLoginStatus)((user)=>{\n    if (user) {\n        document.getElementById(\"login-form\").style.display = \"none\";\n        document.getElementById(\"habit-section\").style.display = \"block\";\n        (0, _firebaseJs.loadHabits)(user.uid); // Pass user.uid to loadHabits\n    } else {\n        document.getElementById(\"login-form\").style.display = \"block\";\n        document.getElementById(\"habit-section\").style.display = \"none\";\n    }\n});\nwindow.removeHabitFromFirebase = (0, _firebaseJs.removeHabitFromFirebase);\n\n},{\"./firebase.js\":\"c71tZ\"}]},[\"6mua5\"], \"6mua5\", \"parcelRequire94c2\")\n\n//# sourceMappingURL=index.71dcae65.js.map\n","import {\n  signIn,\n  signUp,\n  signOutUser,\n  checkLoginStatus,\n  addHabitToFirebase,\n  loadHabits,\n  removeHabitFromFirebase,\n} from \"./firebase.js\";\n\n// DOM elements\nconst signInBtn = document.getElementById(\"sign-in-btn\");\nconst signUpBtn = document.getElementById(\"sign-up-btn\");\nconst signOutBtn = document.getElementById(\"logout-btn\");\nconst addHabitBtn = document.getElementById(\"add-habit-btn\");\nconst emailInput = document.getElementById(\"email\");\nconst passwordInput = document.getElementById(\"password\");\nconst habitNameInput = document.getElementById(\"habit-name\");\n\n// Event Listeners\nsignInBtn.addEventListener(\"click\", signInHandler);\nsignUpBtn.addEventListener(\"click\", signUpHandler);\nsignOutBtn.addEventListener(\"click\", signOutHandler);\naddHabitBtn.addEventListener(\"click\", addHabitHandler);\n\n// Sign in handler\nasync function signInHandler() {\n  const email = emailInput.value;\n  const password = passwordInput.value;\n\n  if (email && password) {\n    const user = await signIn(email, password);\n    if (user) {\n      document.getElementById(\"login-form\").style.display = \"none\";\n      document.getElementById(\"habit-section\").style.display = \"block\";\n      loadHabits(user.uid); // Pass user.uid to loadHabits\n    }\n  }\n}\n\n// Sign up handler\nasync function signUpHandler() {\n  const email = emailInput.value;\n  const password = passwordInput.value;\n\n  if (email && password) {\n    const user = await signUp(email, password);\n    if (user) {\n      document.getElementById(\"login-form\").style.display = \"none\";\n      document.getElementById(\"habit-section\").style.display = \"block\";\n      loadHabits(user.uid); // Pass user.uid to loadHabits\n    }\n  }\n}\n\n// Sign out handler\nasync function signOutHandler() {\n  await signOutUser();\n  document.getElementById(\"login-form\").style.display = \"block\";\n  document.getElementById(\"habit-section\").style.display = \"none\";\n}\n\n// Add habit handler\nasync function addHabitHandler() {\n  const habitName = habitNameInput.value.trim();\n\n  // Ensure that the user is logged in before proceeding\n  checkLoginStatus(async (user) => {\n    if (user && habitName) {\n      try {\n        await addHabitToFirebase(habitName, user.uid); // Pass user.uid here\n        habitNameInput.value = \"\"; // Clear input field\n        console.log(\"Habit added successfully!\");\n\n        // Refresh the habit list immediately\n        loadHabits(user.uid); // Make sure to pass user.uid to loadHabits\n      } catch (error) {\n        console.error(\"Error adding habit:\", error);\n        alert(\"There was an issue adding the habit. Please try again.\");\n      }\n    } else {\n      alert(\"Please enter a habit name or ensure you're logged in.\");\n    }\n  });\n}\n\n// Check if the user is logged in when the page loads\ncheckLoginStatus((user) => {\n  if (user) {\n    document.getElementById(\"login-form\").style.display = \"none\";\n    document.getElementById(\"habit-section\").style.display = \"block\";\n    loadHabits(user.uid); // Pass user.uid to loadHabits\n  } else {\n    document.getElementById(\"login-form\").style.display = \"block\";\n    document.getElementById(\"habit-section\").style.display = \"none\";\n  }\n});\nwindow.removeHabitFromFirebase = removeHabitFromFirebase;\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","__globalThis","_firebaseJs","signInBtn","document","getElementById","signUpBtn","signOutBtn","addHabitBtn","emailInput","passwordInput","habitNameInput","signInHandler","email","value","password","user","signIn","style","display","loadHabits","uid","signUpHandler","signUp","signOutHandler","signOutUser","addHabitHandler","habitName","trim","checkLoginStatus","addHabitToFirebase","console","log","error","alert","addEventListener","removeHabitFromFirebase"],"version":3,"file":"index.71dcae65.js.map"}